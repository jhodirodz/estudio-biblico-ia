<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Herramienta de Estudio Bíblico con IA</title>
    <style>
        :root {
            --primary-color: #007bff;
            --secondary-color: #6c757d;
            --light-gray: #f8f9fa;
            --border-color: #dee2e6;
        }
        body { font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif; background-color: #f4f4f9; color: #333; display: flex; justify-content: center; align-items: flex-start; min-height: 100vh; margin: 0; padding: 2rem 1rem; }
        .container { background-color: white; padding: 2rem; border-radius: 12px; box-shadow: 0 6px 20px rgba(0,0,0,0.1); width: 100%; max-width: 900px; }
        h1, h2, h3, h4 { color: #2c3e50; }
        h1 { text-align: center; margin-bottom: 1.5rem; }
        h2 { border-bottom: 2px solid var(--primary-color); padding-bottom: 0.5rem; margin-top: 2rem; }
        
        .passage-adder, #qa-section { background-color: var(--light-gray); border: 1px solid var(--border-color); border-radius: 8px; padding: 1.5rem; margin-bottom: 1.5rem; }
        .controls { display: grid; grid-template-columns: repeat(auto-fit, minmax(180px, 1fr)); gap: 1rem; align-items: flex-end; margin-bottom: 1rem; }
        select, button, textarea { padding: 0.8rem; border: 1px solid #ddd; border-radius: 8px; font-size: 1rem; background-color: #fff; width: 100%; box-sizing: border-box; }
        select:disabled { background-color: #e9ecef; cursor: not-allowed; opacity: 0.7; }
        #add-passage-btn { background-color: #28a745; color: white; }
        #analyze-passages-btn { background-color: var(--primary-color); color: white; width: 100%; margin-top: 1.5rem; font-size: 1.1rem; padding: 1rem; }
        .checkbox-container { display: flex; align-items: center; gap: 0.5rem; padding: 0.5rem 0; flex-wrap: wrap; }
        .checkbox-container label { user-select: none; margin-right: 1rem; }

        .verse-selector-container { max-height: 200px; overflow-y: auto; background: #fff; border: 1px solid #ddd; border-radius: 8px; padding: 1rem; margin-top: 1rem; }
        .verse-selector-container.disabled { display: none; }
        .verse-checkbox-grid { display: grid; grid-template-columns: repeat(auto-fill, minmax(60px, 1fr)); gap: 0.5rem; }
        .verse-checkbox-item { display: flex; align-items: center; gap: 0.4rem; }
        .verse-checkbox-item label { user-select: none; }

        #passage-list, #saved-studies-list { list-style: none; padding: 0; margin-top: 1rem; }
        #passage-list li, #saved-studies-list li { background: #e9ecef; padding: 0.75rem 1rem; border-radius: 6px; display: flex; justify-content: space-between; align-items: center; margin-bottom: 0.5rem; cursor: pointer; }
        #passage-list li:hover, #saved-studies-list li:hover { background: #dce1e6; }
        .remove-btn { background: #dc3545; color: white; border: none; border-radius: 4px; padding: 0.3rem 0.6rem; cursor: pointer; font-size: 0.8rem; flex-shrink: 0; }
        
        #results-container, #qa-results-container { margin-top: 1rem; }
        .loading, .error { text-align: center; padding: 1.5rem; border-radius: 8px; margin-top: 1rem; }
        .loading { color: #555; }
        .error { background-color: #f8d7da; color: #721c24; border: 1px solid #f5c6cb; }
        .analysis-card { border: 1px solid var(--border-color); border-radius: 8px; margin-bottom: 1.5rem; overflow: hidden; }
        .analysis-card-header { background-color: #343a40; color: white; padding: 1rem 1.5rem; margin: 0; display: flex; justify-content: space-between; align-items: center; }
        .card-buttons button { font-size: 0.8rem; padding: 0.4rem 0.8rem; width: auto; margin-left: 0.5rem; }
        .card-content { padding: 1.5rem; }
        .card-content p { margin: 0 0 1rem 0; line-height: 1.6; }
        .section-title { margin-top: 1.5rem; margin-bottom: 0.75rem; color: #495057; border-bottom: 2px solid #e9ecef; padding-bottom: 0.5rem;}
        blockquote { border-left: 5px solid var(--primary-color); padding-left: 1rem; margin: 0 0 1rem 0; font-style: italic; white-space: pre-wrap; }
        blockquote p { margin-bottom: 0.5rem; }
        
        .styled-table { width: 100%; border-collapse: collapse; margin-top: 1rem; table-layout: fixed; }
        .styled-table th, .styled-table td { text-align: left; padding: 0.75rem; border-bottom: 1px solid var(--border-color); word-wrap: break-word; vertical-align: top; }
        .styled-table th { background-color: var(--light-gray); }
        .hebrew-word { font-size: 1.2rem; }
        .cross-ref-list { list-style-type: square; padding-left: 20px; }
        textarea.personal-notes, #qa-input { width: 100%; min-height: 80px; margin-top: 0.5rem; padding: 0.5rem; border-radius: 6px; border: 1px solid #ccc; }
        #ask-ai-btn { background-color: var(--secondary-color); margin-top: 1rem; }
    </style>
</head>
<body>
    <div class="container">
        <h1>Herramienta de Estudio Bíblico Definitiva</h1>
        
        <div class="passage-adder">
            <h2>Paso 1: Añadir Pasajes para Estudiar</h2>
            <div class="controls">
                <select id="book" name="book" required><option value="">Seleccione un libro</option></select>
                <select id="chapter" name="chapter" required disabled><option value="">Capítulo</option></select>
            </div>
             <div class="checkbox-container">
                <input type="checkbox" id="select-all-verses">
                <label for="select-all-verses">Seleccionar todo el capítulo</label>
            </div>
            <div id="verse-selection-container" class="verse-selector-container disabled">
                <div id="verse-checkbox-grid" class="verse-checkbox-grid"></div>
            </div>
            <button id="add-passage-btn" type="button">Añadir Pasaje(s)</button>
        </div>

        <h2>Paso 2: Elegir Versiones a Comparar</h2>
        <div class="checkbox-container">
             <input type="checkbox" id="version-kjv" value="King James (Español)" checked disabled>
             <label for="version-kjv">King James (Español)</label>
             <input type="checkbox" id="version-rvr" value="Reina Valera 1960">
             <label for="version-rvr">Reina Valera 1960</label>
             <input type="checkbox" id="version-nvi" value="Nueva Versión Internacional">
             <label for="version-nvi">Nueva Versión Internacional</label>
        </div>

        <h2>Paso 3: Analizar</h2>
        <ul id="passage-list"></ul>
        <button id="analyze-passages-btn" type="button" disabled>Analizar Pasajes con IA</button>
        
        <div id="results-container"></div>

        <!-- HTML FALTANTE AÑADIDO AQUÍ -->
        <div id="qa-section">
             <h2>Pregúntale a la IA</h2>
             <p>Haz cualquier pregunta sobre teología, historia bíblica, o el significado de algún concepto.</p>
             <textarea id="qa-input" placeholder="Escribe tu pregunta aquí..."></textarea>
             <button id="ask-ai-btn" type="button">Enviar Pregunta</button>
             <div id="qa-results-container"></div>
        </div>
        
        <div id="history-section">
            <h2>Historial de Estudios Guardados</h2>
            <ul id="saved-studies-list"></ul>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // --- DATOS DE LA ESTRUCTURA BÍBLICA ---
            const BIBLE_BOOKS = [
                { "name": "Génesis", "chapters": [31, 25, 24, 26, 32, 22, 24, 22, 29, 32, 32, 20, 18, 24, 21, 16, 27, 33, 38, 18, 34, 24, 20, 67, 34, 35, 46, 22, 35, 43, 55, 32, 20, 31, 29, 43, 36, 30, 23, 23, 57, 38, 34, 34, 28, 34, 31, 22, 33, 26] },
                { "name": "Éxodo", "chapters": [22, 25, 22, 31, 23, 30, 25, 32, 35, 29, 10, 51, 22, 31, 27, 36, 16, 27, 25, 26, 36, 31, 33, 18, 40, 37, 21, 43, 46, 38, 18, 35, 23, 35, 35, 38, 29, 31, 43, 38] },
                { "name": "Levítico", "chapters": [17, 16, 17, 35, 19, 30, 38, 36, 24, 20, 47, 8, 59, 57, 33, 34, 16, 30, 37, 27, 24, 33, 44, 23, 55, 46, 34] },
                { "name": "Números", "chapters": [54, 34, 51, 49, 31, 27, 89, 26, 23, 36, 35, 16, 33, 45, 41, 50, 13, 32, 22, 29, 35, 41, 30, 25, 18, 65, 23, 31, 40, 16, 54, 42, 56, 29, 34, 13] },
                { "name": "Deuteronomio", "chapters": [46, 37, 29, 49, 33, 25, 26, 20, 29, 22, 32, 32, 18, 29, 23, 22, 20, 22, 21, 20, 23, 30, 25, 22, 19, 19, 26, 68, 29, 20, 30, 52, 29, 12] },
                { "name": "Josué", "chapters": [18, 24, 17, 24, 15, 27, 26, 35, 27, 43, 23, 24, 33, 15, 63, 10, 18, 28, 51, 9, 45, 34, 16, 33] },
                { "name": "Jueces", "chapters": [36, 23, 31, 24, 31, 40, 25, 35, 57, 18, 40, 15, 25, 20, 20, 31, 13, 31, 30, 48, 25] },
                { "name": "Rut", "chapters": [22, 23, 18, 22] },
                { "name": "1 Samuel", "chapters": [28, 36, 21, 22, 12, 21, 17, 22, 27, 27, 15, 25, 23, 52, 35, 23, 58, 30, 24, 42, 15, 23, 29, 22, 44, 25, 12, 25, 11, 31, 13] },
                { "name": "2 Samuel", "chapters": [27, 32, 39, 12, 25, 23, 29, 18, 13, 19, 27, 31, 39, 31, 37, 23, 29, 33, 43, 26, 22, 51, 39, 25] },
                { "name": "1 Reyes", "chapters": [53, 46, 28, 34, 18, 38, 51, 66, 28, 29, 43, 33, 34, 31, 34, 34, 24, 46, 21, 43, 29, 53] },
                { "name": "2 Reyes", "chapters": [18, 25, 27, 44, 27, 33, 20, 29, 37, 36, 20, 21, 25, 29, 38, 20, 41, 37, 37, 21, 26, 20, 37, 20, 30] },
                { "name": "1 Crónicas", "chapters": [54, 55, 24, 43, 26, 81, 40, 40, 44, 14, 47, 40, 14, 17, 29, 43, 27, 17, 19, 8, 30, 19, 32, 31, 31, 32, 34, 21, 30] },
                { "name": "2 Crónicas", "chapters": [17, 18, 17, 22, 14, 42, 22, 18, 31, 19, 23, 16, 22, 15, 19, 14, 19, 34, 11, 37, 20, 12, 21, 27, 28, 23, 9, 27, 36, 27, 21, 33, 25, 33, 27, 23] },
                { "name": "Esdras", "chapters": [11, 70, 13, 24, 17, 22, 28, 36, 15, 44] },
                { "name": "Nehemías", "chapters": [11, 20, 32, 23, 19, 19, 73, 18, 38, 39, 36, 47, 31] },
                { "name": "Ester", "chapters": [22, 23, 15, 17, 14, 14, 10, 17, 32, 3] },
                { "name": "Job", "chapters": [22, 13, 26, 21, 27, 30, 21, 22, 35, 22, 20, 25, 28, 22, 35, 22, 16, 21, 29, 29, 34, 30, 17, 25, 6, 14, 23, 28, 25, 31, 40, 22, 33, 37, 16, 33, 24, 41, 30, 24, 34, 17] },
                { "name": "Salmos", "chapters": [6, 12, 8, 8, 12, 10, 17, 9, 20, 18, 7, 8, 6, 7, 5, 11, 15, 50, 14, 9, 13, 31, 6, 10, 22, 12, 14, 9, 11, 24, 22, 11, 22, 28, 12, 22, 40, 13, 17, 13, 11, 5, 26, 17, 11, 9, 14, 20, 23, 19, 9, 6, 7, 23, 13, 11, 11, 17, 12, 8, 12, 11, 10, 13, 20, 7, 35, 36, 5, 24, 20, 28, 23, 10, 12, 20, 72, 13, 19, 16, 8, 18, 12, 13, 17, 7, 18, 52, 17, 16, 15, 5, 23, 11, 13, 12, 9, 9, 5, 8, 28, 22, 35, 45, 48, 43, 13, 31, 7, 10, 10, 9, 8, 18, 19, 2, 29, 176, 7, 8, 8, 4, 8, 5, 6, 5, 6, 8, 8, 3, 18, 3, 3, 21, 7, 6, 6, 7, 8, 7, 5] },
                { "name": "Proverbios", "chapters": [33, 22, 35, 27, 23, 35, 27, 36, 18, 32, 31, 28, 25, 35, 33, 33, 28, 24, 29, 30, 31, 29, 35, 34, 28, 28, 27, 28, 27, 33, 31] },
                { "name": "Eclesiastés", "chapters": [18, 26, 22, 16, 20, 12, 29, 17, 18, 20, 10, 14] },
                { "name": "Cantares", "chapters": [17, 17, 11, 16, 16, 13, 13, 14] },
                { "name": "Isaías", "chapters": [31, 22, 26, 6, 30, 13, 25, 22, 21, 34, 16, 6, 22, 32, 9, 14, 14, 7, 25, 6, 17, 25, 18, 23, 12, 21, 13, 29, 24, 33, 9, 20, 24, 17, 10, 22, 38, 22, 8, 31, 29, 25, 28, 28, 25, 13, 15, 22, 26, 11, 23, 15, 12, 17, 13, 21, 22, 12, 12, 17, 25, 24, 23, 6, 24] },
                { "name": "Jeremías", "chapters": [19, 37, 25, 31, 31, 30, 34, 22, 26, 25, 23, 17, 27, 22, 21, 21, 27, 23, 15, 18, 14, 30, 40, 10, 38, 24, 22, 17, 32, 24, 40, 44, 26, 22, 19, 32, 21, 28, 18, 16, 18, 22, 13, 30, 5, 28, 7, 47, 39, 46, 64, 34] },
                { "name": "Lamentaciones", "chapters": [22, 22, 66, 22, 22] },
                { "name": "Ezequiel", "chapters": [28, 10, 27, 17, 17, 14, 27, 18, 11, 22, 25, 28, 23, 23, 8, 63, 24, 32, 14, 49, 32, 31, 49, 27, 17, 21, 36, 26, 21, 26, 18, 32, 33, 31, 15, 38, 28, 23, 29, 49, 26, 20, 27, 31, 25, 24, 23, 35] },
                { "name": "Daniel", "chapters": [21, 49, 30, 37, 31, 28, 28, 27, 27, 21, 45, 13] },
                { "name": "Oseas", "chapters": [11, 23, 5, 19, 15, 11, 16, 14, 17, 15, 12, 14, 16, 9] },
                { "name": "Joel", "chapters": [20, 32, 21] },
                { "name": "Amós", "chapters": [15, 16, 15, 13, 27, 14, 17, 14, 15] },
                { "name": "Abdías", "chapters": [1] },
                { "name": "Jonás", "chapters": [17, 10, 10, 11] },
                { "name": "Miqueas", "chapters": [16, 13, 12, 13, 15, 16, 20] },
                { "name": "Nahúm", "chapters": [15, 13, 19] },
                { "name": "Habacuc", "chapters": [17, 20, 19] },
                { "name": "Sofonías", "chapters": [18, 15, 20] },
                { "name": "Hageo", "chapters": [15, 23] },
                { "name": "Zacarías", "chapters": [21, 13, 10, 14, 11, 15, 14, 23, 17, 12, 17, 14, 9, 21] },
                { "name": "Malaquías", "chapters": [14, 17, 18, 6] },
                { "name": "Mateo", "chapters": [25, 23, 17, 25, 48, 34, 29, 34, 38, 42, 30, 50, 58, 36, 39, 28, 27, 35, 30, 34, 46, 46, 39, 51, 46, 75, 66, 20] },
                { "name": "Marcos", "chapters": [45, 28, 35, 41, 43, 56, 37, 38, 50, 52, 33, 44, 37, 72, 47, 20] },
                { "name": "Lucas", "chapters": [80, 52, 38, 44, 39, 49, 50, 56, 62, 42, 54, 59, 35, 35, 32, 31, 37, 43, 48, 47, 38, 71, 56, 53] },
                { "name": "Juan", "chapters": [51, 25, 36, 54, 47, 71, 53, 59, 41, 42, 57, 50, 38, 31, 27, 33, 26, 40, 42, 31, 25] },
                { "name": "Hechos", "chapters": [26, 47, 26, 37, 42, 15, 60, 40, 43, 48, 30, 25, 52, 28, 41, 40, 34, 28, 41, 38, 40, 30, 35, 27, 27, 32, 44, 31] },
                { "name": "Romanos", "chapters": [32, 29, 31, 25, 21, 23, 25, 39, 33, 21, 36, 21, 14, 23, 33, 27] },
                { "name": "1 Corintios", "chapters": [31, 16, 23, 21, 13, 20, 40, 13, 27, 33, 34, 31, 13, 40, 58, 24] },
                { "name": "2 Corintios", "chapters": [24, 17, 18, 18, 21, 18, 16, 24, 15, 18, 33, 21, 14] },
                { "name": "Gálatas", "chapters": [24, 21, 29, 31, 26, 18] },
                { "name": "Efesios", "chapters": [23, 22, 21, 32, 33, 24] },
                { "name": "Filipenses", "chapters": [30, 30, 21, 23] },
                { "name": "Colosenses", "chapters": [29, 23, 25, 18] },
                { "name": "1 Tesalonicenses", "chapters": [10, 20, 13, 18, 28] },
                { "name": "2 Tesalonicenses", "chapters": [12, 17, 18] },
                { "name": "1 Timoteo", "chapters": [20, 16, 16, 16, 25, 21] },
                { "name": "2 Timoteo", "chapters": [18, 26, 17, 22] },
                { "name": "Tito", "chapters": [16, 15, 15] },
                { "name": "Filemón", "chapters": [1] },
                { "name": "Hebreos", "chapters": [14, 18, 19, 16, 14, 20, 28, 13, 28, 39, 40, 29, 25] },
                { "name": "Santiago", "chapters": [27, 26, 18, 17, 20] },
                { "name": "1 Pedro", "chapters": [25, 25, 22, 19, 14] },
                { "name": "2 Pedro", "chapters": [21, 22, 18] },
                { "name": "1 Juan", "chapters": [10, 29, 24, 21, 21] },
                { "name": "2 Juan", "chapters": [13] },
                { "name": "3 Juan", "chapters": [14] },
                { "name": "Judas", "chapters": [25] },
                { "name": "Apocalipsis", "chapters": [20, 29, 22, 11, 14, 17, 17, 13, 21, 11, 19, 17, 18, 20, 8, 21, 18, 24, 21, 15, 27, 21] }
            ];
            
            const DOM = {
                bookSelect: document.getElementById('book'),
                chapterSelect: document.getElementById('chapter'),
                verseContainer: document.getElementById('verse-checkbox-grid'),
                verseSelectorContainer: document.getElementById('verse-selection-container'),
                selectAllCheckbox: document.getElementById('select-all-verses'),
                addPassageBtn: document.getElementById('add-passage-btn'),
                passageList: document.getElementById('passage-list'),
                analyzeBtn: document.getElementById('analyze-passages-btn'),
                resultsContainer: document.getElementById('results-container'),
                savedStudiesList: document.getElementById('saved-studies-list'),
                versionCheckboxes: document.querySelectorAll('input[type="checkbox"][id^="version-"]'),
                qaInput: document.getElementById('qa-input'),
                askAiBtn: document.getElementById('ask-ai-btn'),
                qaResultsContainer: document.getElementById('qa-results-container')
            };

            let passagesToAnalyze = [];
            let savedStudies = JSON.parse(localStorage.getItem('bibleStudies')) || [];

            const displayError = (container, message) => { container.innerHTML = `<div class="error">${message}</div>`; };
            
            const updatePassageList = () => {
                DOM.passageList.innerHTML = '';
                passagesToAnalyze.forEach((passage, index) => {
                    const li = document.createElement('li');
                    li.textContent = passage;
                    const removeBtn = document.createElement('button');
                    removeBtn.textContent = 'Quitar';
                    removeBtn.className = 'remove-btn';
                    removeBtn.onclick = () => {
                        passagesToAnalyze.splice(index, 1);
                        updatePassageList();
                    };
                    li.appendChild(removeBtn);
                    DOM.passageList.appendChild(li);
                });
                DOM.analyzeBtn.disabled = passagesToAnalyze.length === 0;
            };

            const formatVerseQuery = (numbers) => {
                if (!numbers || numbers.length === 0) return '';
                numbers.sort((a, b) => a - b);
                const ranges = [];
                let start = numbers[0], end = numbers[0];
                for (let i = 1; i < numbers.length; i++) {
                    if (numbers[i] === end + 1) end = numbers[i];
                    else {
                        ranges.push(start === end ? `${start}` : `${start}-${end}`);
                        start = end = numbers[i];
                    }
                }
                ranges.push(start === end ? `${start}` : `${start}-${end}`);
                return ranges.join(',');
            };

            const renderAnalysisResults = (analyses) => {
                let resultsHtml = '';
                analyses.forEach((analysis, index) => {
                    let versionComparisonHtml = `<div class="section-title"><h4>Comparación de Versiones</h4><table class="styled-table">`;
                    analysis.version_comparison.forEach(v => {
                        let versionText = v.verses.map(verse => `<p><b>${verse.verse_number}</b> ${verse.text}</p>`).join('');
                        versionComparisonHtml += `<tr><td><strong>${v.version}</strong></td><td>${versionText}</td></tr>`;
                    });
                    versionComparisonHtml += '</table></div>';

                    let characterProfilesHtml = analysis.character_profiles[0] !== "No se mencionan personajes principales" 
                        ? `<div class="section-title"><h4>Perfiles de Personajes</h4>${analysis.character_profiles.map(p => `<p>${p}</p>`).join('')}</div>` : '';
                    
                    let keywordsTable = `<div class="keywords-section"><h4 class="section-title">Análisis de Palabras Clave</h4><table class="styled-table"><tr><th>Original</th><th>Transliteración</th><th>Strong</th><th>Definición Expositiva</th></tr>`;
                    analysis.keywords.forEach(kw => {
                        keywordsTable += `<tr><td class="hebrew-word">${kw.original_word}</td><td><em>${kw.transliteration}</em></td><td>${kw.strong_number}</td><td>${kw.expository_definition}</td></tr>`;
                    });
                    keywordsTable += '</table></div>';

                    let crossRefHtml = `<div class="context-section"><h4 class="section-title">Referencias Cruzadas</h4><ul class="cross-ref-list">`;
                    analysis.cross_references.forEach(ref => { crossRefHtml += `<li>${ref}</li>`; });
                    crossRefHtml += `</ul></div>`;
                    
                    let highlightedVerseHtml = analysis.verses_highlighted.map(v => `<p><b>${v.verse_number}</b> ${v.verse_text_html}</p>`).join('');
                    
                    resultsHtml += `
                        <div class="analysis-card" id="analysis-${index}">
                            <div class="analysis-card-header">
                                <h3>${analysis.title}</h3>
                                <div class="card-buttons">
                                    <button class="save-study-btn" data-index="${index}">Guardar Estudio</button>
                                    <button class="export-study-btn" data-index="${index}">Exportar</button>
                                </div>
                            </div>
                            <div class="card-content">
                                <h4 class="section-title">Texto del Pasaje (King James - Español)</h4>
                                <blockquote>${highlightedVerseHtml}</blockquote>
                                ${versionComparisonHtml}
                                <div class="reflection-section"><h4 class="section-title">Género Literario</h4><p><em>${analysis.literary_genre}</em></p></div>
                                ${characterProfilesHtml}
                                <div class="reflection-section"><h4 class="section-title">Reflexión Teológica</h4><p>${analysis.reflection_text}</p></div>
                                <div class="context-section"><h4 class="section-title">Contexto Histórico y Cultural</h4><p>${analysis.historical_context}</p></div>
                                ${crossRefHtml}
                                ${keywordsTable}
                                <div class="notes-section"><h4 class="section-title">Mis Notas Personales</h4><textarea class="personal-notes" placeholder="Escribe tus notas aquí...">${analysis.personal_notes || ''}</textarea></div>
                            </div>
                        </div>`;
                });
                DOM.resultsContainer.innerHTML = resultsHtml;
            };
            
            const displaySavedStudies = () => {
                DOM.savedStudiesList.innerHTML = '';
                savedStudies.forEach((study, index) => {
                    const li = document.createElement('li');
                    li.textContent = study.title;
                    li.onclick = () => renderAnalysisResults([study]);
                    const removeBtn = document.createElement('button');
                    removeBtn.textContent = 'Borrar';
                    removeBtn.className = 'remove-btn';
                    removeBtn.onclick = (e) => {
                        e.stopPropagation();
                        if (confirm(`¿Seguro que quieres borrar el estudio de "${study.title}"?`)) {
                            savedStudies.splice(index, 1);
                            localStorage.setItem('bibleStudies', JSON.stringify(savedStudies));
                            displaySavedStudies();
                        }
                    };
                    li.appendChild(removeBtn);
                    DOM.savedStudiesList.appendChild(li);
                });
            };

            try {
                BIBLE_BOOKS.forEach((book, index) => DOM.bookSelect.add(new Option(book.name, index)));
                
                DOM.bookSelect.addEventListener('change', () => {
                    DOM.chapterSelect.innerHTML = '<option value="">Capítulo</option>';
                    DOM.verseContainer.innerHTML = '';
                    DOM.verseSelectorContainer.classList.add('disabled');
                    DOM.chapterSelect.disabled = true;
                    DOM.selectAllCheckbox.checked = false;

                    if (DOM.bookSelect.value !== "") {
                        const book = BIBLE_BOOKS[DOM.bookSelect.value];
                        const chapterCount = book.chapters.length;
                        for (let i = 1; i <= chapterCount; i++) {
                            DOM.chapterSelect.add(new Option(i, i));
                        }
                        DOM.chapterSelect.disabled = false;
                    }
                });

                DOM.chapterSelect.addEventListener('change', () => {
                    const bookIndex = DOM.bookSelect.value;
                    const chapterIndex = parseInt(DOM.chapterSelect.value, 10) - 1;
                    DOM.verseContainer.innerHTML = '';
                    DOM.selectAllCheckbox.checked = false;
                    
                    if (bookIndex !== "" && chapterIndex >= 0) {
                        const verseCount = BIBLE_BOOKS[bookIndex].chapters[chapterIndex];
                        for (let i = 1; i <= verseCount; i++) {
                            const itemDiv = document.createElement('div');
                            itemDiv.className = 'verse-checkbox-item';
                            const checkbox = document.createElement('input');
                            checkbox.type = 'checkbox';
                            checkbox.id = `verse-${i}`;
                            checkbox.value = i;
                            const label = document.createElement('label');
                            label.htmlFor = `verse-${i}`;
                            label.textContent = i;
                            itemDiv.appendChild(checkbox);
                            itemDiv.appendChild(label);
                            DOM.verseContainer.appendChild(itemDiv);
                        }
                        DOM.verseSelectorContainer.classList.remove('disabled');
                    } else {
                        DOM.verseSelectorContainer.classList.add('disabled');
                    }
                });

                DOM.selectAllCheckbox.addEventListener('change', () => DOM.verseContainer.querySelectorAll('input[type="checkbox"]').forEach(cb => cb.checked = DOM.selectAllCheckbox.checked));
                
                DOM.addPassageBtn.addEventListener('click', () => {
                    if (DOM.bookSelect.value === "" || DOM.chapterSelect.value === "") {
                        alert('Por favor, seleccione un libro y capítulo.');
                        return;
                    }
                    const bookName = BIBLE_BOOKS[DOM.bookSelect.value].name;
                    const chapter = DOM.chapterSelect.value;
                    let verseQuery;
                    if (DOM.selectAllCheckbox.checked) {
                        verseQuery = '*';
                    } else {
                        const selected = Array.from(DOM.verseContainer.querySelectorAll('input:checked')).map(cb => parseInt(cb.value));
                        if (selected.length === 0) {
                            alert('Seleccione al menos un versículo o marque "Seleccionar todo el capítulo".');
                            return;
                        }
                        verseQuery = formatVerseQuery(selected);
                    }
                    const reference = `${bookName} ${chapter}:${verseQuery}`;
                    if (!passagesToAnalyze.includes(reference)) {
                        passagesToAnalyze.push(reference);
                        updatePassageList();
                    }
                });
                
                DOM.analyzeBtn.addEventListener('click', async () => {
                    if (passagesToAnalyze.length === 0) return;
                    
                    DOM.resultsContainer.innerHTML = '<p class="loading">La IA está realizando el análisis completo. Esto puede tardar un momento...</p>';
                    
                    const selectedVersions = Array.from(DOM.versionCheckboxes).filter(cb => cb.checked).map(cb => cb.value);

                    try {
                        const GEMINI_API_URL = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=`;
                        
                        const prompt = `Actúa como un teólogo y lingüista bíblico experto. Para la siguiente lista de pasajes [${passagesToAnalyze.join(', ')}], realiza estas tareas para CADA pasaje:
1.  **Comparación de Versiones**: Proporciona el texto exacto del pasaje para cada versión en esta lista: [${selectedVersions.join(', ')}]. Tu respuesta debe ser una lista de versos enumerados.
2.  **Análisis Adicional**: Proporciona el Género Literario, Perfiles de Personajes (si aplica), Contexto Histórico-Cultural, una Reflexión Teológica y 3-5 Referencias Cruzadas.
3.  **Palabras Clave**: Identifica 1-3 palabras clave. Para cada una, da la palabra original (hebreo/griego), transliteración, número Strong y una definición expositiva detallada.
4.  **Texto Subrayado**: Usando el texto de la "King James (Español)", reescríbelo en una lista enumerada de versículos, subrayando las palabras clave con la etiqueta <u>.

Devuelve tu respuesta ÚNICAMENTE como un objeto JSON. La clave principal debe ser "analyses", un array de objetos. Cada objeto debe tener estas claves: "title", "literary_genre", "character_profiles" (array de strings), "version_comparison" (array de objetos con "version" y "verses" [array de objetos con "verse_number" y "text"]), "verses_highlighted" (array de objetos con "verse_number" y "verse_text_html"), "reflection_text", "historical_context", "cross_references" (array de strings), y "keywords" (array de objetos con "original_word", "transliteration", "strong_number", y "expository_definition").`;
                        
                        const schema = {
                            type: "OBJECT",
                            properties: {
                                "analyses": {
                                    type: "ARRAY",
                                    items: {
                                        type: "OBJECT",
                                        properties: {
                                            "title": { "type": "STRING" },
                                            "literary_genre": { "type": "STRING" },
                                            "character_profiles": { type: "ARRAY", items: { type: "STRING" } },
                                            "version_comparison": { 
                                                type: "ARRAY", 
                                                items: { 
                                                    type: "OBJECT", 
                                                    properties: { 
                                                        "version": { "type": "STRING" }, 
                                                        "verses": {
                                                            type: "ARRAY",
                                                            items: {
                                                                type: "OBJECT",
                                                                properties: {
                                                                    "verse_number": { "type": "STRING" },
                                                                    "text": { "type": "STRING" }
                                                                },
                                                                required: ["verse_number", "text"]
                                                            }
                                                        }
                                                    }, 
                                                    required: ["version", "verses"] 
                                                } 
                                            },
                                            "verses_highlighted": {
                                                type: "ARRAY",
                                                items: {
                                                    type: "OBJECT",
                                                    properties: {
                                                        "verse_number": { "type": "STRING" },
                                                        "verse_text_html": { "type": "STRING" }
                                                    },
                                                    required: ["verse_number", "verse_text_html"]
                                                }
                                            },
                                            "reflection_text": { "type": "STRING" },
                                            "historical_context": { "type": "STRING" },
                                            "cross_references": { type: "ARRAY", items: { "type": "STRING" } },
                                            "keywords": {
                                                type: "ARRAY",
                                                items: {
                                                    type: "OBJECT",
                                                    properties: { "original_word": { "type": "STRING" }, "transliteration": { "type": "STRING" }, "strong_number": { "type": "STRING" }, "expository_definition": { "type": "STRING" } },
                                                    required: ["original_word", "transliteration", "strong_number", "expository_definition"]
                                                }
                                            }
                                        },
                                        required: ["title", "literary_genre", "character_profiles", "version_comparison", "verses_highlighted", "reflection_text", "historical_context", "cross_references", "keywords"]
                                    }
                                }
                            },
                            required: ["analyses"]
                        };

                        const geminiPayload = {
                            contents: [{ parts: [{ text: prompt }] }],
                            generationConfig: { responseMimeType: "application/json", responseSchema: schema }
                        };
                        
                        const geminiResponse = await fetch(GEMINI_API_URL, {
                            method: 'POST',
                            headers: { 'Content-Type': 'application/json' },
                            body: JSON.stringify(geminiPayload)
                        });
                        
                        if (!geminiResponse.ok) {
                            throw new Error("La IA no pudo procesar la solicitud. Intente de nuevo.");
                        }

                        const geminiData = await geminiResponse.json();
                        const responseText = geminiData.candidates[0].content.parts[0].text;
                        const parsedData = JSON.parse(responseText);
                        
                        window.currentAnalyses = parsedData.analyses;
                        renderAnalysisResults(parsedData.analyses);
                    } catch (error) {
                        console.error('Error en el proceso de análisis:', error);
                        displayError(DOM.resultsContainer, error.message);
                    }
                });

                 DOM.askAiBtn.addEventListener('click', async () => {
                    const question = DOM.qaInput.value.trim();
                    if (!question) {
                        alert("Por favor, escribe una pregunta.");
                        return;
                    }
                    DOM.qaResultsContainer.innerHTML = '<p class="loading">La IA está pensando en tu respuesta...</p>';
                    try {
                        const GEMINI_API_URL = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=`;
                        const prompt = `Actúa como un teólogo experto y responde a la siguiente pregunta basándote en un análisis bíblico completo, citando versículos cuando sea apropiado. La pregunta es: "${question}"`;
                        const geminiPayload = { contents: [{ parts: [{ text: prompt }] }] };
                        const geminiResponse = await fetch(GEMINI_API_URL, {
                            method: 'POST',
                            headers: { 'Content-Type': 'application/json' },
                            body: JSON.stringify(geminiPayload)
                        });
                        if (!geminiResponse.ok) {
                            throw new Error("La IA no pudo procesar tu pregunta en este momento. Intenta de nuevo.");
                        }
                        const geminiData = await geminiResponse.json();
                        const responseText = geminiData.candidates[0].content.parts[0].text;
                        DOM.qaResultsContainer.innerHTML = `<div class="analysis-card"><div class="card-content" style="white-space: pre-wrap;">${responseText}</div></div>`;
                    } catch (error) {
                        console.error('Error en la sección de preguntas y respuestas:', error);
                        displayError(DOM.qaResultsContainer, error.message);
                    }
                });
                
                DOM.resultsContainer.addEventListener('click', (e) => {
                    const target = e.target;
                    if (target.classList.contains('save-study-btn')) {
                        const index = target.dataset.index;
                        const analysisData = window.currentAnalyses[index];
                        const notes = document.querySelector(`#analysis-${index} .personal-notes`).value;
                        analysisData.personal_notes = notes;
                        
                        if (savedStudies.some(s => s.title === analysisData.title)) {
                            alert("Este estudio ya ha sido guardado.");
                            return;
                        }
                        
                        savedStudies.push(analysisData);
                        localStorage.setItem('bibleStudies', JSON.stringify(savedStudies));
                        displaySavedStudies();
                        alert(`¡Estudio de "${analysisData.title}" guardado!`);
                    }
                    
                    if(target.classList.contains('export-study-btn')) {
                        const index = target.dataset.index;
                        const analysis = window.currentAnalyses[index];
                        const notes = document.querySelector(`#analysis-${index} .personal-notes`).value;
                        let textToExport = `ESTUDIO BÍBLICO: ${analysis.title}\n\n`;
                        textToExport += `GÉNERO LITERARIO: ${analysis.literary_genre}\n\n`;
                        
                        textToExport += `--- TEXTO DEL PASAJE (King James - Español) ---\n`;
                        analysis.verses_highlighted.forEach(v => {
                            textToExport += `${v.verse_number}. ${v.verse_text_html.replace(/<\/?u>/g, '*')}\n`;
                        });
                        textToExport += '\n';
                        
                        analysis.version_comparison.forEach(v => {
                            if (v.version !== 'King James (Español)') {
                                textToExport += `--- ${v.version} ---\n`;
                                v.verses.forEach(vs => { textToExport += `${vs.verse_number}. ${vs.text}\n`; });
                                textToExport += '\n';
                            }
                        });
                        
                        textToExport += `--- REFLEXIÓN TEOLÓGICA ---\n${analysis.reflection_text}\n\n`;
                        textToExport += `--- CONTEXTO HISTÓRICO-CULTURAL ---\n${analysis.historical_context}\n\n`;
                        textToExport += `--- REFERENCIAS CRUZADAS ---\n${analysis.cross_references.join('\n')}\n\n`;
                        
                        textToExport += `--- ANÁLISIS DE PALABRAS CLAVE ---\n`;
                        analysis.keywords.forEach(kw => {
                            textToExport += `\nPalabra: ${kw.original_word} (${kw.transliteration}) - Strong: ${kw.strong_number}\n`;
                            textToExport += `Definición: ${kw.expository_definition}\n`;
                        });
                        
                        if (notes) {
                            textToExport += `\n--- MIS NOTAS PERSONALES ---\n${notes}\n`;
                        }
                        
                        const blob = new Blob([textToExport], { type: 'text/plain;charset=utf-8' });
                        const url = URL.createObjectURL(blob);
                        const a = document.createElement('a');
                        a.href = url;
                        a.download = `Estudio - ${analysis.title.replace(/[:*]/g, '_')}.txt`;
                        a.click();
                        URL.revokeObjectURL(url);
                    }
                });

                displaySavedStudies();

            } catch (error) {
                console.error("Error fatal al inicializar:", error);
                displayError(DOM.resultsContainer, 'Ocurrió un error fatal al cargar la aplicación. Por favor, recargue la página.');
            }
        });
    </script>
</body>
</html>
